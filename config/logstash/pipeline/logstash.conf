input {
  heartbeat {
    interval => 120
    message  => 'Hello from Logstash ðŸ’“'
    type => 'myinputheartbeat'
  }
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}

## https://www.elastic.co/blog/logstash-metadata
## https://www.elastic.co/guide/en/logstash/current/event-dependent-configuration.html#metadata
## https://www.elastic.co/guide/en/logstash/current/configuration-file-structure.html
## https://www.elastic.co/guide/en/logstash/current/environment-variables.html
## https://www.elastic.co/guide/en/logstash/current/config-examples.html
##
## https://www.elastic.co/guide/en/logstash/current/plugins-inputs-beats.html#_description
## https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
## https://www.elastic.co/support/matrix#matrix_logstash_plugins
##
## Add your filters / logstash plugins configuration here

filter {
  # log pattern matching
   if [type] == "myinputheartbeat" {
    mutate { add_field => { "[@metadata][beat]" => "heartbeat" } }
    mutate { add_field => { "[@metadata][version]" => "6.5.3" } }
    mutate { add_field => { "[@metadata][type]" => "doc" } }
  } else if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  } else if [type] == "jenkins" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp_string}\s+%{GREEDYDATA:rest}" }
    }
    date {
      match => ["timestamp_string", "ISO8601"]
    }
    mutate {
      remove_field => [message, timestamp_string]
    }
  } else {

  }
}

output {
  stdout {
    codec => rubydebug {
      metadata => true
    }
  }
  if [@metadata][beat] {
    elasticsearch {
      hosts    => [ 'elasticsearch:9200' ]
      user     => 'elastic'
      password => "${ELASTIC_PASSWORD}"  # read password from logstash.keystore
      ssl => true
      cacert => '/usr/share/logstash/config/certs/ca/ca.crt'
      manage_template => false
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts    => [ 'elasticsearch:9200' ]
      user     => 'elastic'
      password => "${ELASTIC_PASSWORD}"  # read password from logstash.keystore
      ssl => true
      cacert => '/usr/share/logstash/config/certs/ca/ca.crt'
    }
  }
}
